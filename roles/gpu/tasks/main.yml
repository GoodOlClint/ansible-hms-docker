---
- name: Run RHEL-based install.
  ansible.builtin.import_tasks: redhat.yml
  when: gpu_family_override | lower == "redhat"

- name: Run Debian-based install.
  ansible.builtin.import_tasks: debian.yml
  when: ansible_facts["os_family"] | lower == "debian"

- name: Ensure nvidia-container-toolkit package
  ansible.builtin.package:
    name: nvidia-container-toolkit
    update_cache: true
    state: "{{ gpu_prereq_packages_state }}"

- name: Verify nvidia-container-runtime-hook is in $PATH
  shell: "which nvidia-container-runtime-hook"
  register: nvidia_container_runtime_hook_path
  changed_when: false

- name: Exit if nvidia-container-runtime-hook is not in $PATH
  fail:
    msg: "nvidia-container-runtime-hook not found in $PATH"
  when: nvidia_container_runtime_hook_path.rc != 0

- name: Check if Docker daemon config exists
  ansible.builtin.stat:
    path: '/etc/docker/daemon.json'
  register: docker_daemon_config_path

- name: Get existing Docker daemon config
  ansible.builtin.slurp:
    path: '/etc/docker/daemon.json'
  register: docker_daemon_config
  when: docker_daemon_config_path.stat.exists

- name: Run nvidia-ctk command if existing docker daemon config exists
  ansible.builtin.shell:
    cmd: sudo nvidia-ctk runtime configure --runtime=docker
  when: docker_daemon_config_path.stat.exists and not docker_daemon_config['content'] | b64decode | regex_search('nvidia-container-runtime') | default(false)
  register: nvidia_ctk_ran

- name: Restart Docker after nvidia-ctk execution
  ansible.builtin.service:
    name: docker
    state: restarted
  when: nvidia_ctk_ran.changed

- name: Verify CUDA container works
  community.docker.docker_container:
    name: nvidia-gpu-validation
    image: ubuntu
    command: nvidia-smi
    runtime: nvidia
    state: started
    device_requests:
      - driver: nvidia
        count: -1
        capabilities:
          - gpu

- name: Remove CUDA container
  community.docker.docker_container:
    name: nvidia-gpu-validation
    state: absent
